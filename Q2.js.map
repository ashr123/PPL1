{"version":3,"file":"Q2.js","sourceRoot":"","sources":["Q2.ts"],"names":[],"mappings":"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","sourcesContent":["// import {map, union} from 'ramda'\n\ndeclare const require: any;\nconst assert=require('assert');\n\ninterface BinTree\n{\n\troot: number;\n\tleft?: BinTree;\n\tright?: BinTree;\n}\n\nconst tree1: BinTree={\n\t\troot: 5,\n\t\tleft: {\n\t\t\troot: -3,\n\t\t\tleft: {\n\t\t\t\troot: 23\n\t\t\t}\n\t\t},\n\t\tright: {\n\t\t\troot: 3,\n\t\t\tleft: {\n\t\t\t\troot: 8\n\t\t\t},\n\t\t\tright: {\n\t\t\t\troot: 12\n\t\t\t}\n\t\t}\n\t},\n\ttree2: BinTree={\n\t\troot: 1,\n\t\tright: {\n\t\t\troot: 2,\n\t\t\tright: {\n\t\t\t\troot: 3,\n\t\t\t\tright: {\n\t\t\t\t\troot: 4,\n\t\t\t\t\tright: {\n\t\t\t\t\t\troot: 5,\n\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\troot: 6,\n\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\troot: 7,\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\troot: 8\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\ttree3: BinTree=undefined,\n\tGTree1: GBinTree<string | number | boolean>={\n\t\troot: true,\n\t\tleft: {\n\t\t\troot: 'a',\n\t\t\tleft: {\n\t\t\t\troot: 'Java',\n\t\t\t\tright: {\n\t\t\t\t\troot: 'Scheme'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tright: {\n\t\t\troot: 'b',\n\t\t\tleft: {\n\t\t\t\troot: 8\n\t\t\t}\n\t\t}\n\t},\n\tGTree2: GBinTree<string>={\n\t\troot: \"a\",\n\t\tright: {\n\t\t\troot: \"b\",\n\t\t\tright: {\n\t\t\t\troot: \"c\",\n\t\t\t\tright: {\n\t\t\t\t\troot: \"d\",\n\t\t\t\t\tright: {\n\t\t\t\t\t\troot: \"e\",\n\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\troot: \"f\",\n\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\troot: \"g\",\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\troot: \"h\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tGTree3=undefined,\n\tTreePreArray: (tree: BinTree) => number[]=tree =>\n\t{\n\t\tif (!tree)\n\t\t\treturn [];\n\t\treturn [tree.root].concat(TreePreArray(tree.left)).concat(TreePreArray(tree.right)) //union(union([tree.root], TreePreArray(tree.left)), TreePreArray(tree.right));\n\t},\n\tTreeInArray: (tree: BinTree) => number[]=tree =>\n\t{\n\t\tif (!tree)\n\t\t\treturn [];\n\t\treturn TreeInArray(tree.left).concat([tree.root]).concat(TreeInArray(tree.right)) //union(union(TreeInArray(tree.left), [tree.root]), TreeInArray(tree.right));\n\t},\n\tTreePostArray: (tree: BinTree) => number[]=tree =>\n\t{\n\t\tif (!tree)\n\t\t\treturn [];\n\t\treturn TreePostArray(tree.left).concat(TreePostArray(tree.right)).concat([tree.root]) //union(union(TreePostArray(tree.left), TreePostArray(tree.right)), [tree.root]);\n\t};\n\nfunction testTreePreArray(): void\n{\n\tassert.deepStrictEqual(TreePreArray(tree1), [5, -3, 23, 3, 8, 12]);\n\tassert.deepStrictEqual(TreePreArray(tree2), [1, 2, 3, 4, 5, 6, 7, 8]);\n\tassert.deepStrictEqual(TreePreArray(tree3), []);\n}\n\nfunction testTreeInArray(): void\n{\n\tassert.deepStrictEqual(TreeInArray(tree1), [23, -3, 5, 8, 3, 12]);\n\tassert.deepStrictEqual(TreeInArray(tree2), [1, 2, 3, 4, 5, 6, 7, 8]);\n\tassert.deepStrictEqual(TreeInArray(tree3), []);\n}\n\nfunction testTreePostArray(): void\n{\n\tassert.deepStrictEqual(TreePostArray(tree1), [23, -3, 8, 12, 3, 5]);\n\tassert.deepStrictEqual(TreePostArray(tree2), [8, 7, 6, 5, 4, 3, 2, 1]);\n\tassert.deepStrictEqual(TreePostArray(tree3), []);\n}\n\ntestTreePreArray();\ntestTreeInArray();\ntestTreePostArray();\n\n// console.log(TreePreArray(tree1));\n// console.log(TreeInArray(tree1));\n// console.log(TreePostArray(tree1));\n\ninterface GBinTree<T>\n{\n\troot: T;\n\tleft?: GBinTree<T>;\n\tright?: GBinTree<T>;\n}\n\nfunction GTreePreArray<T>(tree: GBinTree<T>): T[]\n{\n\tif (!tree)\n\t\treturn [];\n\treturn [tree.root].concat(GTreePreArray(tree.left)).concat(GTreePreArray(tree.right)) //union(union([tree.root], GTreePreArray(tree.left)), GTreePreArray(tree.right));\n}\n\nfunction GTreeInArray<T>(tree: GBinTree<T>): T[]\n{\n\tif (!tree)\n\t\treturn [];\n\treturn GTreeInArray(tree.left).concat([tree.root]).concat(GTreeInArray(tree.right)) //union(union(GTreeInArray(tree.left), [tree.root]), GTreeInArray(tree.right));\n}\n\nfunction GTreePostArray<T>(tree: GBinTree<T>): T[]\n{\n\tif (!tree)\n\t\treturn [];\n\treturn GTreePostArray(tree.left).concat(GTreePostArray(tree.right)).concat([tree.root]) //union(union(GTreePostArray(tree.left), GTreePostArray(tree.right)), [tree.root]);\n}\n\n// console.log(GTreePreArray(GTree1));\n// console.log(GTreeInArray(GTree1));\n// console.log(GTreePostArray(GTree1));\n\nfunction testGTreePreArray(): void\n{\n\tassert.deepStrictEqual(GTreePreArray(GTree1), [true, 'a', 'Java', 'Scheme', 'b', 8]);\n\tassert.deepStrictEqual(GTreePreArray(GTree2), ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']);\n\tassert.deepStrictEqual(GTreePreArray(GTree3), []);\n}\n\nfunction testGTreeInArray(): void\n{\n\tassert.deepStrictEqual(GTreeInArray(GTree1), ['Java', 'Scheme', 'a', true, 8, 'b']);\n\tassert.deepStrictEqual(GTreeInArray(GTree2), ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']);\n\tassert.deepStrictEqual(GTreeInArray(GTree3), []);\n}\n\nfunction testGTreePostArray(): void\n{\n\tassert.deepStrictEqual(GTreePostArray(GTree1), ['Scheme', 'Java', 'a', 8, 'b', true]);\n\tassert.deepStrictEqual(GTreePostArray(GTree2), ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a']);\n\tassert.deepStrictEqual(GTreePostArray(GTree3), []);\n}\n\ntestGTreePreArray();\ntestGTreeInArray();\ntestGTreePostArray();\n\nfunction KSubsets<T>(A: T[], k: number): T[][]\n{\n\tfunction fork(i: number, acc: T[]): T[][]\n\t{\n\t\tif (acc.length===k)\n\t\t\treturn [acc];\n\t\tif (i===A.length)\n\t\t\treturn [];\n\t\treturn fork(i+1, acc.concat([A[i]])).concat(fork(i+1, acc));\n\t}\n\n\treturn fork(0, [])\n}\n\nfunction AllSubsets<T>(A: T[]): T[][]\n{\n\tfunction temp(i: number): T[][]\n\t{\n\t\tif (i===A.length)\n\t\t\treturn KSubsets(A, i);\n\t\treturn KSubsets(A, i).concat(temp(i+1));\n\t}\n\n\treturn temp(0);\n}\n\nconst num: number[]=[1, 2, 3];\n// console.log(KSubsets(num, 2));\n// console.log(KSubsets([[1], [2], [3]], 2));\n// console.log(AllSubsets(num));\n// console.log(AllSubsets([[1], [2], [3]]));\n\nfunction testKSubsets(): void\n{\n\tassert.deepStrictEqual(KSubsets(num, 2), [[1, 2], [1, 3], [2, 3]]);\n\tassert.deepStrictEqual(KSubsets(num, 0), [[]]);\n\tassert.deepStrictEqual(KSubsets(num, 3), [[1, 2, 3]]);\n}\n\nfunction testAllSubsets(): void\n{\n\tassert.deepStrictEqual(AllSubsets(num), [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]);\n\tassert.deepStrictEqual(AllSubsets([[1], [2], [3]]),\n\t\t[[], [[1]], [[2]], [[3]], [[1], [2]], [[1], [3]], [[2], [3]], [[1], [2], [3]]]);\n\tassert.deepStrictEqual(AllSubsets([]), [[]]);\n}\n\ntestKSubsets();\ntestAllSubsets();\n\nfunction Flatmap<T, R>(f: (x: T) => R[], A: T[]): R[]\n{\n\tfunction temp(i: number): R[]\n\t{\n\t\tif (i===A.length)\n\t\t\treturn [];\n\t\treturn f(A[i]).concat(temp(i+1));\n\t}\n\n\treturn temp(0);\n}\n\n// console.log(Flatmap(x => x, [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]));\n\nfunction testFlatmap(): void\n{\n\tassert.deepStrictEqual(Flatmap(x => x[0], [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]), [1, 2, 5, 6]);\n\tassert.deepStrictEqual(Flatmap(x => [x, x+1], [1, 2, 3, 4]), [1, 2, 2, 3, 3, 4, 4, 5]);\n\tassert.deepStrictEqual(Flatmap(x => x, [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]),\n\t\t[[1, 2], [3, 4], [5, 6], [7, 8]]);\n}\n\ntestFlatmap();\n\ntype Boxart={ width: number, height: number, url: string };\ntype Video={\n\tid: number,\n\ttitle: string,\n\tboxarts: Boxart[],\n\turl: string,\n\trating: number,\n\tbookmark: { id: number, time: number }[]\n}\ntype BoxArtRet={ id: number, title: string, boxart: string };\n\ninterface Movie\n{\n\tname: string,\n\tvideos: Video[]\n}\n\nconst movieLists: Movie[]=[\n\t{\n\t\tname: \"Instant Queue\",\n\t\tvideos: [\n\t\t\t{\n\t\t\t\t\"id\": 70111470,\n\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\"boxarts\": [\n\t\t\t\t\t{width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg\"},\n\t\t\t\t\t{width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/DieHard200.jpg\"}\n\t\t\t\t],\n\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\"bookmark\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 654356453,\n\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\"boxarts\": [\n\t\t\t\t\t{width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/BadBoys200.jpg\"},\n\t\t\t\t\t{width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg\"}\n\n\t\t\t\t],\n\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\"bookmark\": [{id: 432534, time: 65876586}]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"New Releases\",\n\t\tvideos: [\n\t\t\t{\n\t\t\t\t\"id\": 65432445,\n\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\"boxarts\": [\n\t\t\t\t\t{width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg\"},\n\t\t\t\t\t{width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/TheChamber200.jpg\"}\n\t\t\t\t],\n\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\"bookmark\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 675465,\n\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\"boxarts\": [\n\t\t\t\t\t{width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg\"},\n\t\t\t\t\t{width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg\"},\n\t\t\t\t\t{width: 300, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg\"}\n\t\t\t\t],\n\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\"bookmark\": [{id: 432534, time: 65876586}]\n\t\t\t}\n\t\t]\n\t}\n];\n\nfunction getBoxArts(movieLists: Movie[]): BoxArtRet[]\n{\n\treturn Flatmap((x: Movie): Video[] => x.videos, movieLists).map((y: Video): BoxArtRet =>\n\t{\n\t\treturn {\n\t\t\tid: y.id,\n\t\t\ttitle: y.title,\n\t\t\tboxart: Flatmap((z: Boxart): string[] => [z.url], y.boxarts.filter((u: Boxart): boolean => u.width===150 && u.height===200)).reduce((acc: string): string => acc)\n\t\t}\n\t});\n}\n\n// console.log(getBoxArts([{name: \"Empty\", videos: []}]));\n\nfunction testGetBoxArts()\n{\n\tassert.deepStrictEqual(getBoxArts(movieLists), [{\n\t\tid: 70111470,\n\t\ttitle: 'Die Hard',\n\t\tboxart: 'http://cdn-0.nflximg.com/images/2891/DieHard150.jpg'\n\t},\n\t\t{\n\t\t\tid: 654356453,\n\t\t\ttitle: 'Bad Boys',\n\t\t\tboxart: 'http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg'\n\t\t},\n\t\t{\n\t\t\tid: 65432445,\n\t\t\ttitle: 'The Chamber',\n\t\t\tboxart: 'http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg'\n\t\t},\n\t\t{\n\t\t\tid: 675465,\n\t\t\ttitle: 'Fracture',\n\t\t\tboxart: 'http://cdn-0.nflximg.com/images/2891/Fracture150.jpg'\n\t\t}]);\n\tassert.deepStrictEqual(getBoxArts([{name: \"Empty\", videos: []}]), []);\n\tassert.deepStrictEqual(getBoxArts([]), []);\n}\n\ntestGetBoxArts();"]}