{"version":3,"file":"1.3.js","sourceRoot":"","sources":["1.3.ts"],"names":[],"mappings":";;AAAA,iCAAyB;AAEzB,MAAM,EAAE,GAAkC,EAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,EAAE,EAAC,EACjE,EAAE,GAAyD,EAAC,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,EAAE,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,EAAC,EAClG,EAAE,GAA0B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EACxC,EAAE,GAA8D,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,WAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClG,IAAI,CAAC,GAAG;IACP,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;CACN,CAAC;AACF,IAAI,CAAC,GAAG;IACP,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;CACN,CAAC;AACF,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACZ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC","sourcesContent":["import {map} from 'ramda'\n\nconst v1: { name: string, age: number } = {name: \"peter\", age: 20},\n\tv2: { children: ({ name: string } | { age: number })[] } = {children: [{name: \"john\"}, {age: 12}]},\n\tv3: (x: number) => number = (x) => x + 2,\n\tv4: <T, Y>(f: (x: T | Y) => T | Y, l: (T | Y)[]) => (T | Y)[] = (f, l) => map((x) => f(f(x)), l);\nlet a = [\n\t[1, 2],\n\t[3, 4],\n];\nlet b = [\n\t[9, 9],\n\t[8, 7],\n];\na.concat(b);\nconsole.log(b);"]}